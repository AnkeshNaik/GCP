gcloud auth list

gcloud config list project

gcloud config set compute/zone us-central1

gcloud container clusters create [CLUSTER-NAME]   // name of ur wish

gcloud container clusters get-credentials [CLUSTER-NAME]

kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:2.0

kubectl expose deployment hello-server --type=LoadBalancer --port <App port number> //number is 80


kubectl expose deployment hello-server --type=LoadBalancer --port <App port number>


gcloud compute instance-templates create web-server-template \
          --metadata-from-file startup-script=startup.sh \
          --network nucleus-vpc \
          --machine-type g1-small \
          --region us-central1

gcloud compute instance-groups managed create web-server-group \
          --base-instance-name web-server \
          --size 2 \
          --template web-server-template \
          --region us-central1



gcloud compute firewall-rules create grant-tcp-rule-871 \
          --allow tcp:80 \
          --network nucleus-vpc
gcloud compute http-health-checks create http-basic-check
gcloud compute instance-groups managed \
          set-named-ports web-server-group \
          --named-ports http:80 \
          --region us-central1


gcloud compute backend-services create web-server-backend \
          --protocol HTTP \
          --http-health-checks http-basic-check \
          --global
gcloud compute backend-services add-backend web-server-backend \
          --instance-group web-server-group \
          --instance-group-region us-central1 \
          --global

          
gcloud compute url-maps create web-server-map \
          --default-service web-server-backend
gcloud compute target-http-proxies create http-lb-proxy \
          --url-map web-server-map


   gcloud compute forwarding-rules create permit-tcp-rule-261 \
     --global \
     --target-http-proxy http-lb-proxy \
     --ports 80
          

gcloud compute forwarding-rules list




